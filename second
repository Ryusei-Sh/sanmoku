import random
import matplotlib.pyplot as plt

# ボード作成
board = [' '] * 9

# 勝利条件の組み合わせ
winning_combinations = [
    [0, 1, 2], [3, 4, 5], [6, 7, 8],  # 横のライン
    [0, 3, 6], [1, 4, 7], [2, 5, 8],  # 縦のライン
    [0, 4, 8], [2, 4, 6]              # 対角線
]

# ボード描画
def draw_board(board):
    fig, ax = plt.subplots()
    ax.axis('off')
    ax.plot([0, 3, 3, 0, 0], [0, 0, 3, 3, 0], 'black')
    for i, symbol in enumerate(board):
        if symbol == 'X':
            ax.text((i % 3) + 0.5, 2.5 - (i // 3), symbol, fontsize=80, color='red', ha='center', va='center')
        elif symbol == 'O':
            ax.text((i % 3) + 0.5, 2.5 - (i // 3), symbol, fontsize=80, color='blue', ha='center', va='center')
    plt.show()

# プレイヤーの入力を受け付ける
def get_player_move(board):
    while True:
        move = input("次の手を入力してください (0-8): ")
        if move.isdigit():
            move = int(move)
            if 0 <= move <= 8 and board[move] == ' ':
                return move
        print("有効な手を入力してください。")

# コンピュータの手を決定する
def get_computer_move(board):
    # 勝利可能な手があるかチェックする
    for combination in winning_combinations:
        if board[combination[0]] == board[combination[1]] == 'O' and board[combination[2]] == ' ':
            return combination[2]
        elif board[combination[0]] == board[combination[2]] == 'O' and board[combination[1]] == ' ':
            return combination[1]
        elif board[combination[1]] == board[combination[2]] == 'O' and board[combination[0]] == ' ':
            return combination[0]

    # プレイヤーが勝利する可能性のある手をブロックする
    for combination in winning_combinations:
        if board[combination[0]] == board[combination[1]] == 'X' and board[combination[2]] == ' ':
            return combination[2]
        elif board[combination[0]] == board[combination[2]] == 'X' and board[combination[1]] == ' ':
            return combination[1]
        elif board[combination[1]] == board[combination[2]] == 'X' and board[combination[0]] == ' ':
            return combination[0]
